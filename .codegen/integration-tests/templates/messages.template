// generated code - ** DO NOT EDIT **

package uhppoted

import(
    "errors"

    lib "github.com/uhppoted/uhppoted-lib-go/uhppoted"
    "github.com/uhppoted/uhppoted-lib-go/uhppoted/entities"
)

type message = struct {
    Request  []byte
    Response [][]byte
}

var Messages = []message{
{{ range $func := . }}    // {{ $func.Name }}{{ range $test := $func.Tests }}
    {
        Request: []byte{
{{ hex $test.Request }}
        },
        Response: [][]byte{
{{ range $reply := $test.Replies }}            []byte{
{{ hex $reply.Message }}
            },
{{ end }}
        },
    },

{{ end -}}
{{ end }}

    // invalid response
    {
        Request: []byte{
            0x17, 0x94, 0x00, 0x00, 0x90, 0x53, 0xfb, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
        Response: [][]byte{
            []byte{
                0x17, 0x94, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0xc0, 0xa8, 0x01, 0x64, 0xff, 0xff, 0xff, 0x00,
                0xc0, 0xa8, 0x01, 0x01, 0x00, 0x12, 0x23, 0x34, 0x45, 0x56, 0x08, 0x92, 0x20, 0x18, 0x11, 0x05,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            },
        },
    },

}

var Events = []struct {
    Packet []byte
    Event  *lib.ListenerEvent
    Error  error
}{
    // normal event
    {
        []byte{
            0x17, 0x20, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0x30, 0x26, 0x01, 0x00, 0x03, 0x01, 0x04, 0x02,
            0xa0, 0x7a, 0x99, 0x00, 0x20, 0x24, 0x11, 0x10, 0x12, 0x34, 0x56, 0x06, 0x01, 0x00, 0x01, 0x01,
            0x01, 0x01, 0x00, 0x01, 0x1b, 0x14, 0x37, 0x53, 0xe3, 0x55, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
            0x9a, 0x07, 0x09, 0x24, 0x11, 0x13, 0x00, 0x00, 0x93, 0x26, 0x04, 0x88, 0x08, 0x92, 0x00, 0x00,
        },
        &lib.ListenerEvent{
            Controller:         405419896,
            SystemDate:         entities.MustParseDate("2024-11-13"),
            SystemTime:         entities.MustParseTime("14:37:53"),
            Door1Open:          true,
            Door2Open:          false,
            Door3Open:          true,
            Door4Open:          true,
            Door1Button:        true,
            Door2Button:        true,
            Door3Button:        false,
            Door4Button:        true,
            Relays:             7,
            Inputs:             9,
            SystemError:        27,
            SpecialInfo:        154,
            EventIndex:         75312,
            EventType:          3,
            EventAccessGranted: true,
            EventDoor:          4,
            EventDirection:     2,
            EventCard:          10058400,
            EventTimestamp:     entities.MustParseDateTime("2024-11-10 12:34:56"),
            EventReason:        6,
            SequenceNo:         21987,
        },
        nil,
    },

    // v6.62 event
    {
        []byte{
            0x19, 0x20, 0x00, 0x00, 0x41, 0x78, 0x1e, 0x12, 0x30, 0x26, 0x01, 0x00, 0x03, 0x01, 0x04, 0x02,
            0xa0, 0x7a, 0x99, 0x00, 0x20, 0x24, 0x11, 0x10, 0x12, 0x34, 0x56, 0x06, 0x01, 0x00, 0x01, 0x01,
            0x01, 0x01, 0x00, 0x01, 0x1b, 0x14, 0x37, 0x53, 0xe3, 0x55, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
            0x9a, 0x07, 0x09, 0x24, 0x11, 0x13, 0x00, 0x00, 0x93, 0x26, 0x04, 0x88, 0x08, 0x92, 0x00, 0x00,
        },
        &lib.ListenerEvent{
            Controller:         303986753,        
            SystemDate:         entities.MustParseDate("2024-11-13"),
            SystemTime:         entities.MustParseTime("14:37:53"),
            Door1Open:          true,
            Door2Open:          false,
            Door3Open:          true,
            Door4Open:          true,
            Door1Button:        true,
            Door2Button:        true,
            Door3Button:        false,
            Door4Button:        true,
            Relays:             7,
            Inputs:             9,
            SystemError:        27,
            SpecialInfo:        154,
            EventIndex:         75312,
            EventType:          3,
            EventAccessGranted: true,
            EventDoor:          4,
            EventDirection:     2,
            EventCard:          10058400,
            EventTimestamp:     entities.MustParseDateTime("2024-11-10 12:34:56"),
            EventReason:        6,
            SequenceNo:         21987,
        },
        nil,
    },

    // event without event
    {
        []byte{
            0x17, 0x20, 0x00, 0x00, 0x79, 0x37, 0x2a, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01,
            0x01, 0x01, 0x00, 0x01, 0x1b, 0x14, 0x37, 0x53, 0xe3, 0x55, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
            0x9a, 0x07, 0x09, 0x24, 0x11, 0x13, 0x00, 0x00, 0x93, 0x26, 0x04, 0x88, 0x08, 0x92, 0x00, 0x00,
        },
        &lib.ListenerEvent{
            Controller:         405419897,        
            SystemDate:         entities.MustParseDate("2024-11-13"),
            SystemTime:         entities.MustParseTime("14:37:53"),
            Door1Open:          true,
            Door2Open:          false,
            Door3Open:          true,
            Door4Open:          true,
            Door1Button:        true,
            Door2Button:        true,
            Door3Button:        false,
            Door4Button:        true,
            Relays:             7,
            Inputs:             9,
            SystemError:        27,
            SpecialInfo:        154,
            EventIndex:         0,
            EventType:          0,
            EventAccessGranted: false,
            EventDoor:          0,
            EventDirection:     0,
            EventCard:          0,
            EventTimestamp:     entities.MustParseDateTime("0001-01-01 00:00:00"),
            EventReason:        0,
            SequenceNo:         21987,
        },
        nil,
    },

    // error event
    {
        []byte{
            0x17, 0xff, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0xc8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01,
            0x50, 0xff, 0x0f, 0x00, 0x20, 0x24, 0x12, 0x13, 0x10, 0x23, 0x27, 0x12, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x23, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x24, 0x12, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        },
        nil,
        errors.New("invalid reply function code (ff)"),
    },
}
