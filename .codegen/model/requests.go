package model

import (
	"net/netip"
)

type Request struct {
	Name    string
	MsgType byte
	Fields  []Field
	Tests   []Test
}

var Requests = []Request{
	GetControllerRequest,
	SetIPv4Request,
	GetStatusRequest,
	GetTimeRequest,
	SetTimeRequest,
	GetListenerRequest,
	SetListenerRequest,
}

var GetControllerRequest = Request{
	Name:    "get controller",
	MsgType: 0x94,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
	},
	Tests: []Test{
		{
			Name: "get-all-controllers",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(0)},
			},
			Expected: []byte{
				0x17, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
		{
			Name: "get-controller",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
			},
			Expected: []byte{
				0x17, 0x94, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}

var SetIPv4Request = Request{
	Name:    "set IPv4",
	MsgType: 0x96,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
		{"address", "IPv4", 8, "controller IPv4 address"},
		{"netmask", "IPv4", 12, "controller IPv4 subnet mask"},
		{"gateway", "IPv4", 16, "controller IPv4 gateway address"},
		{"", "magic", 20, "'magic' word"},
	},
	Tests: []Test{
		{
			Name: "set-IPv4",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
				Arg{Name: "address", Type: "IPv4", Value: netip.MustParseAddr("192.168.1.125")},
				Arg{Name: "netmask", Type: "IPv4", Value: netip.MustParseAddr("255.255.255.0")},
				Arg{Name: "gateway", Type: "IPv4", Value: netip.MustParseAddr("192.168.1.1")},
			},
			Expected: []byte{
				0x17, 0x96, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0xc0, 0xa8, 0x01, 0x7d, 0xff, 0xff, 0xff, 0x00,
				0xc0, 0xa8, 0x01, 0x01, 0x55, 0xaa, 0xaa, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}

var GetStatusRequest = Request{
	Name:    "get status",
	MsgType: 0x20,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
	},
	Tests: []Test{
		{
			Name: "get-status",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
			},
			Expected: []byte{
				0x17, 0x20, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}

var GetTimeRequest = Request{
	Name:    "get time",
	MsgType: 0x32,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
	},
	Tests: []Test{
		{
			Name: "get-time",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
			},
			Expected: []byte{
				0x17, 0x32, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}

var SetTimeRequest = Request{
	Name:    "set time",
	MsgType: 0x30,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
		{"datetime", "datetime", 8, "controller serial number"},
	},
	Tests: []Test{
		{
			Name: "set-time",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
				Arg{Name: "datetime", Type: "datetime", Value: "2024-11-04 12:34:56"},
			},
			Expected: []byte{
				0x17, 0x30, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0x20, 0x24, 0x11, 0x04, 0x12, 0x34, 0x56, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}

var GetListenerRequest = Request{
	Name:    "get listener",
	MsgType: 0x92,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
	},
	Tests: []Test{
		{
			Name: "get-listener",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
			},
			Expected: []byte{
				0x17, 0x92, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}

var SetListenerRequest = Request{
	Name:    "set listener",
	MsgType: 0x90,
	Fields: []Field{
		{"controller", "uint32", 4, "controller serial number"},
		{"listener", "addrport", 8, "event listener IPv4 address:port"},
		{"interval", "uint8", 14, "auto-send interval (seconds)"},
	},
	Tests: []Test{
		{
			Name: "set-listener",
			Args: []Arg{
				Arg{Name: "controller", Type: "uint32", Value: uint32(405419896)},
				Arg{Name: "listener", Type: "addrport", Value: "192.168.1.100:60001"},
				Arg{Name: "interval", Type: "uint8", Value: 17},
			},
			Expected: []byte{
				0x17, 0x90, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0xc0, 0xa8, 0x01, 0x64, 0x61, 0xea, 0x11, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			},
		},
	},
}
