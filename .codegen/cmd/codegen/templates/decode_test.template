// generated code - ** DO NOT EDIT **

package decode

import (
    "fmt"
    "net/netip"
    "testing"
    "time"
    "reflect"

    "github.com/uhppoted/uhppoted-lib-go/uhppoted/codec"
)

{{ range $response := . }}{{ range $test := $response.Tests}}
func Test{{ titleCase $test.Name }}Response(t *testing.T) {
    packet := []byte{
{{ hex $test.Response }}
    }

    expected := codec.GetControllerResponse {
{{ range $value := $test.Values}}{{ titleCase $value.Name }}: {{ value $value.Value $value.Type }},
{{ end -}}
    }

    response,err := GetControllerResponse(packet)

    if err != nil {
        t.Fatalf("%v",err)
    } else if !reflect.DeepEqual(response, expected) {
        t.Errorf("incorrectly decoded response:\n   expected: %#v\n   got:      %#v", expected,response)
    }
}
{{ end -}}
{{ end }}

func IPv4(v string) netip.Addr {
    return netip.MustParseAddr(v)
}

func date(v string) time.Time {
    if d,err := time.ParseInLocation("2006-01-02", v, time.Local); err != nil {
        panic(fmt.Sprintf("invalid date (%v)", v))
    } else {
    return d
    }
}