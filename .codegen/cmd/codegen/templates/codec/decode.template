// UHPPOTE request packet decoder.
//
// Decodes a UHPPOTE access controller 64 byte UDP response packet into the
// equivalent Python object.
package decode

import (
    "fmt"

    "github.com/uhppoted/uhppoted-lib-go/uhppoted/codec"
)

{{ range $response := . }}
// Decodes a {{ hyphenate $response.Name }} response.
//
//  Parameters:
//      packet  (bytearray)  64 byte UDP packet.
//
//  Returns:
//      - {{ titleCase $response.Name }}Response initialised from the UDP packet.
//      - error if the packet is not 64 bytes, has an invalid start-of-message byte or has
//                 the incorrect message type.
func {{ titleCase $response.Name }}Response(packet []byte) (codec.{{ titleCase $response.Name }}Response, error) {
    if len(packet) != 64 {
        return codec.{{ titleCase $response.Name }}Response{}, fmt.Errorf("invalid reply packet length (%v)", len(packet))
    }

    if packet[0] != codec.SOM {
        return codec.{{ titleCase $response.Name }}Response{}, fmt.Errorf("invalid reply start of message byte (%02x)", packet[0])
    }

    if packet[1] != codec.{{ titleCase $response.Name }} {
        return codec.{{ titleCase $response.Name }}Response{}, fmt.Errorf("invalid reply function code (%02x)", packet[1])
    }

    return codec.{{ titleCase $response.Name }}Response{
{{- range $i,$field := $response.Fields }}
        {{ unpack $field }},{{ end }}
    }, nil
}
{{ end -}}