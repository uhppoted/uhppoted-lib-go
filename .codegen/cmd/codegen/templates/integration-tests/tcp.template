package uhppoted

import (
    "net/netip"
    "reflect"
    "testing"

    test "github.com/uhppoted/uhppoted-lib-go/integration-tests"
    lib "github.com/uhppoted/uhppoted-lib-go/uhppoted"
)

{{ range $func := . }}{{ if includes $func.Protocols "tcp"}}{{ range $test := $func.Tests }}
func Test{{ titleCase $test.Name }}(t *testing.T) {
{{- range $arg := $test.Args }}{{ if ne $arg.Name "controller"}}      {{ $arg.Name }} := {{ arg $arg }}{{ end }}
{{ end }}
    response, err := lib.{{ titleCase $func.Name }}(u{{ range $arg := $test.Args }}, {{ $arg.Name }}{{end }}, timeout)

    if err != nil {
        t.Fatalf("%v", err)
    } else if !reflect.DeepEqual(response, test.Expected.{{ titleCase $test.Name }}) {
        t.Errorf("incorrect response\n   expected:%#v\n   got:     %#v", test.Expected.{{ titleCase $test.Name }}, response)
    }
}
{{ end }}{{ end }}{{ end }}
